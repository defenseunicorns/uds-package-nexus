domain: ###ZARF_VAR_DOMAIN###
hostname: nexus

openshift: false

image:
  pullPolicy: IfNotPresent

job_image:
  pullPolicy: IfNotPresent

nexus:
  imagePullSecrets:
    - name: private-registry
  properties:
    override: true
    data:
      nexus.datastore.enabled: true
  env:
    - name: NEXUS_DATASTORE_NEXUS_JDBCURL
      value: jdbc:postgresql://###ZARF_VAR_NEXUS_DB_ENDPOINT###:5432/###ZARF_VAR_NEXUS_DB_NAME###
    - name: NEXUS_DATASTORE_NEXUS_USERNAME
      value: ###ZARF_VAR_NEXUS_DB_USERNAME###
    - name: NEXUS_DATASTORE_NEXUS_PASSWORD
      value: ###ZARF_VAR_NEXUS_DB_PASSWORD###
    - name: INSTALL4J_ADD_VM_PARAMS
      value: ###ZARF_VAR_NEXUS_VM_PARAMS###
    - name: NEXUS_SECURITY_RANDOMPASSWORD
      value: "###ZARF_VAR_NEXUS_SECURITY_RANDOMPASSWORD###"

license_key: |
  ###ZARF_VAR_NEXUS_LICENSE_KEY###

sso:
  enabled: ###ZARF_VAR_NEXUS_SSO_ENABLED###
  idp_data:
    # Nexus entity ID must be a URI. Using this format does the trick
    entityId: "uds:nexus"
    usernameAttribute: ###ZARF_VAR_NEXUS_SSO_IDP_USERNAME_ATTRIBUTE###
    firstNameAttribute: ###ZARF_VAR_NEXUS_SSO_IDP_FIRSTNAME_ATTRIBUTE###
    lastNameAttribute: ###ZARF_VAR_NEXUS_SSO_IDP_LASTNAME_ATTRIBUTE###
    emailAttribute: ###ZARF_VAR_NEXUS_SSO_IDP_EMAIL_ATTRIBUTE###
    groupsAttribute: ###ZARF_VAR_NEXUS_SSO_IDP_GROUPS_ATTRIBUTE###
    validateResponseSignature: ###ZARF_VAR_NEXUS_SSO_IDP_VALIDATE_RESPONSE_SIGNATURE###
    validateAssertionSignature: ###ZARF_VAR_NEXUS_SSO_IDP_VALIDATE_ASSERTION_SIGNATURE###
    idpMetadata: ###ZARF_VAR_NEXUS_SSO_IDP_METADATA###
  realm:
    - "NexusAuthenticatingRealm"
    - "SamlRealm"
    - "User-Token-Realm"
  role:
    - id: "/UDS Core/Admin"
      name: "nexus-admin"
      description: "nexus admin role"
      roles:
        - "nx-admin"

istio:
  enabled: true
  injection: enabled
